<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 自动扫描该包 -->
	<context:component-scan base-package="com.jt"/>
	
	<!-- 用spring的原生类加载properties -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 设定参数 -->
		<property name="locations">
			<list>
				<value>
				classpath:/properties/jdbc.properties
				</value>
				<value>
				classpath:/properties/image.properties
				</value>
				<value>
				classpath:/properties/redis.properties
				</value> 
			</list>
<!-- 			<list>classpath:/properties/jdbc.properties</list>
			<list>classpath:/properties/jdbc.properties</list>
			<list>classpath:/properties/jdbc.properties</list>
			<list>classpath:/properties/jdbc.properties</list>
			<list>classpath:/properties/jdbc.properties</list> -->
		</property>
	</bean>
	
		<!-- 配置连接池 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<!-- 数据库驱动 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!-- 相应驱动的jdbcUrl -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!-- 数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
		<property name="idleMaxAge" value="30" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="150" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="5" />
	</bean>
	
	<!-- 3.引入声明式事物控制 -->
	<!-- <tx:annotation-driven/> --> <!-- 开启事物注解 --><!-- 弊端：每一个方法都要手动的添加事物控制 -->
	
	<!-- 3.1配置声明式事物处理的通知 
	transactionManager：表示事物管理器，控制提交，回滚;
	如果<tx:advice transaction-manager="transactionManager"可以不写
	
	事物的管理策略
	增/山/改		要事物
	查询			不用事物,配置只读
	其他方法		不需要,配置只读
	-->
	<bean id="a" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="a">
		<tx:attributes >
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
			
		</tx:attributes>
	</tx:advice>
	<!-- aop的前面 
	proxy-target-class="false"
	表达式的写法：
	wtihin(包名.类名) 	类级别,全部打方法
	execution(返回类型 包名。类名。方法名。（参数列表)
	-->
	<aop:config proxy-target-class="true">
	<aop:pointcut expression="execution(* com.jt.sso.service..*.*(..))" id="pc"/>
			<aop:advisor  advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</beans>